(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-70b22150"],{"14c3":function(t,e,n){var r=n("c6b6"),i=n("9263");t.exports=function(t,e){var n=t.exec;if("function"===typeof n){var a=n.call(t,e);if("object"!==typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(t,e)}},"466d":function(t,e,n){"use strict";var r=n("d784"),i=n("825a"),a=n("50c4"),c=n("1d80"),o=n("8aa5"),s=n("14c3");r("match",1,(function(t,e,n){return[function(e){var n=c(this),r=void 0==e?void 0:e[t];return void 0!==r?r.call(e,n):new RegExp(e)[t](String(n))},function(t){var r=n(e,t,this);if(r.done)return r.value;var c=i(t),l=String(this);if(!c.global)return s(c,l);var u=c.unicode;c.lastIndex=0;var d,f=[],h=0;while(null!==(d=s(c,l))){var b=String(d[0]);f[h]=b,""===b&&(c.lastIndex=o(l,a(c.lastIndex),u)),h++}return 0===h?null:f}]}))},"4de4":function(t,e,n){"use strict";var r=n("23e7"),i=n("b727").filter,a=n("1dde"),c=n("ae40"),o=a("filter"),s=c("filter");r({target:"Array",proto:!0,forced:!o||!s},{filter:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},6547:function(t,e,n){var r=n("a691"),i=n("1d80"),a=function(t){return function(e,n){var a,c,o=String(i(e)),s=r(n),l=o.length;return s<0||s>=l?t?"":void 0:(a=o.charCodeAt(s),a<55296||a>56319||s+1===l||(c=o.charCodeAt(s+1))<56320||c>57343?t?o.charAt(s):a:t?o.slice(s,s+2):c-56320+(a-55296<<10)+65536)}};t.exports={codeAt:a(!1),charAt:a(!0)}},"797f":function(t,e,n){},"8aa5":function(t,e,n){"use strict";var r=n("6547").charAt;t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},9263:function(t,e,n){"use strict";var r=n("ad6d"),i=n("9f7f"),a=RegExp.prototype.exec,c=String.prototype.replace,o=a,s=function(){var t=/a/,e=/b*/g;return a.call(t,"a"),a.call(e,"a"),0!==t.lastIndex||0!==e.lastIndex}(),l=i.UNSUPPORTED_Y||i.BROKEN_CARET,u=void 0!==/()??/.exec("")[1],d=s||u||l;d&&(o=function(t){var e,n,i,o,d=this,f=l&&d.sticky,h=r.call(d),b=d.source,p=0,g=t;return f&&(h=h.replace("y",""),-1===h.indexOf("g")&&(h+="g"),g=String(t).slice(d.lastIndex),d.lastIndex>0&&(!d.multiline||d.multiline&&"\n"!==t[d.lastIndex-1])&&(b="(?: "+b+")",g=" "+g,p++),n=new RegExp("^(?:"+b+")",h)),u&&(n=new RegExp("^"+b+"$(?!\\s)",h)),s&&(e=d.lastIndex),i=a.call(f?n:d,g),f?i?(i.input=i.input.slice(p),i[0]=i[0].slice(p),i.index=d.lastIndex,d.lastIndex+=i[0].length):d.lastIndex=0:s&&i&&(d.lastIndex=d.global?i.index+i[0].length:e),u&&i&&i.length>1&&c.call(i[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(i[o]=void 0)})),i}),t.exports=o},"9f7f":function(t,e,n){"use strict";var r=n("d039");function i(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=r((function(){var t=i("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=r((function(){var t=i("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},a099:function(t,e,n){},a434:function(t,e,n){"use strict";var r=n("23e7"),i=n("23cb"),a=n("a691"),c=n("50c4"),o=n("7b0b"),s=n("65f0"),l=n("8418"),u=n("1dde"),d=n("ae40"),f=u("splice"),h=d("splice",{ACCESSORS:!0,0:0,1:2}),b=Math.max,p=Math.min,g=9007199254740991,x="Maximum allowed length exceeded";r({target:"Array",proto:!0,forced:!f||!h},{splice:function(t,e){var n,r,u,d,f,h,v=o(this),y=c(v.length),O=i(t,y),C=arguments.length;if(0===C?n=r=0:1===C?(n=0,r=y-O):(n=C-2,r=p(b(a(e),0),y-O)),y+n-r>g)throw TypeError(x);for(u=s(v,r),d=0;d<r;d++)f=O+d,f in v&&l(u,d,v[f]);if(u.length=r,n<r){for(d=O;d<y-r;d++)f=d+r,h=d+n,f in v?v[h]=v[f]:delete v[h];for(d=y;d>y-r+n;d--)delete v[d-1]}else if(n>r)for(d=y-r;d>O;d--)f=d+r-1,h=d+n-1,f in v?v[h]=v[f]:delete v[h];for(d=0;d<n;d++)v[d+O]=arguments[d+2];return v.length=y-r+n,u}})},ac1f:function(t,e,n){"use strict";var r=n("23e7"),i=n("9263");r({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},ad6d:function(t,e,n){"use strict";var r=n("825a");t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},b045:function(t,e,n){"use strict";n.r(e);var r=n("7a23"),i={class:"pagelink"},a=Object(r["g"])("新型コロナウイルス情報"),c=Object(r["h"])("a",null,"＞津山市コロナ感染者詳細情報",-1),o=Object(r["h"])("h1",null,"津山市コロナ感染者詳細情報",-1);function s(t,e,n,s,l,u){var d=Object(r["x"])("mainmenu"),f=Object(r["x"])("router-link"),h=Object(r["x"])("ChartBar");return Object(r["q"])(),Object(r["d"])(r["a"],null,[Object(r["h"])(d,{judge:"0"}),Object(r["h"])("div",i,[Object(r["h"])(f,{to:"/"},{default:Object(r["D"])((function(){return[a]})),_:1}),c]),o,Object(r["h"])(h)],64)}var l={class:"Chart"},u={key:0,id:"chart",height:"100",width:"300"},d={key:1,id:"chart"};function f(t,e,n,i,a,c){return Object(r["q"])(),Object(r["d"])(r["a"],null,[Object(r["h"])("button",{type:"button",onClick:e[1]||(e[1]=function(){return c.Back.apply(c,arguments)}),disabled:t.isTestDisabledBack},"前",8,["disabled"]),Object(r["h"])("button",{type:"button",onClick:e[2]||(e[2]=function(){return c.Next.apply(c,arguments)}),disabled:t.isTestDisabledNext},"次",8,["disabled"]),Object(r["h"])("div",l,[1==c.isLarge?(Object(r["q"])(),Object(r["d"])("canvas",u)):0==c.isLarge?(Object(r["q"])(),Object(r["d"])("canvas",d)):Object(r["e"])("",!0)])],64)}n("99af"),n("4de4"),n("c975"),n("d81d"),n("13d5"),n("fb6a"),n("a434"),n("ac1f"),n("466d");var h=n("30ef"),b=n.n(h);function p(t,e,n){for(var r=[],i=0;i<e.length;i++)r[i]=e[i].slice(0,7);for(var a=r.filter((function(t,e,n){return n.indexOf(t)===e})),c=0;c<e.length;c++)e[c].slice(0,7)!=a[a.length-1-n]&&(e.splice(c,1),t.splice(c,1),c-=1);for(var o,s=/津山市/g,l=0;l<t.length;l++){var u=t[l].match(s);o=null==u?0:u.length,t[l]=o}return{data:t,label:e,labelLen:a.length}}var g={data:function(){return{count:0,isTestDisabledBack:!1,isTestDisabledNext:!0,kenDetails:this.$store.state.detaildata}},methods:{listCategoryCreat:function(t){var e=this.kenDetails.map((function(e){return[e[t]]})).reduce((function(t,e){return t.concat(e)}));return e},Next:function(){this.count=this.count-1,this.count<=0?(this.isTestDisabledNext=!0,this.isTestDisabledBack=!1,this.count=0):(this.isTestDisabledNext=!1,this.isTestDisabledBack=!1),this.renderChart()},Back:function(){this.count=this.count+1,this.count>=this.CountLength-1?(this.isTestDisabledBack=!0,this.isTestDisabledNext=!1,this.count=this.CountLength-1):(this.isTestDisabledBack=!1,this.isTestDisabledNext=!1),this.renderChart()},renderChart:function(){var t=this.listCategoryCreat("市区町村名"),e=this.listCategoryCreat("集計時点_年月日");e=e.filter(Boolean);var n=p(t,e,this.count);this.CountLength=n.LabelLen,this.chart&&this.chart.destroy();var r=document.getElementById("chart").getContext("2d");this.chart=new b.a(r,{type:"bar",data:{labels:n.label,datasets:[{label:"新規感染者数",data:n.data,backgroundColor:"rgba(54, 162, 235, 0.2)",borderColor:"rgb(54, 162, 235)",borderWidth:1}]},options:{plugins:{pan:{enabled:!0,mode:"xy"},zoom:{enabled:!0,drag:!0,mode:"xy"}},scales:{xAxes:[{stacked:!0}],yAxes:[{ticks:{beginAtZero:!0,userCallback:function(t){if(Math.floor(t)===t)return t},fontSize:15,suggestedMax:10,stepSize:5}}]}}})}},computed:{isLarge:function(){return!!window.matchMedia("(min-width: 480px)").matches}},mounted:function(){this.renderChart()}};n("bca7");g.render=f;var x=g,v=n("ad3a"),y={components:{ChartBar:x,mainmenu:v["a"]}};n("d138");y.render=s;e["default"]=y},bca7:function(t,e,n){"use strict";n("a099")},c975:function(t,e,n){"use strict";var r=n("23e7"),i=n("4d64").indexOf,a=n("a640"),c=n("ae40"),o=[].indexOf,s=!!o&&1/[1].indexOf(1,-0)<0,l=a("indexOf"),u=c("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:s||!l||!u},{indexOf:function(t){return s?o.apply(this,arguments)||0:i(this,t,arguments.length>1?arguments[1]:void 0)}})},d138:function(t,e,n){"use strict";n("797f")},d784:function(t,e,n){"use strict";n("ac1f");var r=n("6eeb"),i=n("d039"),a=n("b622"),c=n("9263"),o=n("9112"),s=a("species"),l=!i((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),u=function(){return"$0"==="a".replace(/./,"$0")}(),d=a("replace"),f=function(){return!!/./[d]&&""===/./[d]("a","$0")}(),h=!i((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));t.exports=function(t,e,n,d){var b=a(t),p=!i((function(){var e={};return e[b]=function(){return 7},7!=""[t](e)})),g=p&&!i((function(){var e=!1,n=/a/;return"split"===t&&(n={},n.constructor={},n.constructor[s]=function(){return n},n.flags="",n[b]=/./[b]),n.exec=function(){return e=!0,null},n[b](""),!e}));if(!p||!g||"replace"===t&&(!l||!u||f)||"split"===t&&!h){var x=/./[b],v=n(b,""[t],(function(t,e,n,r,i){return e.exec===c?p&&!i?{done:!0,value:x.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:f}),y=v[0],O=v[1];r(String.prototype,t,y),r(RegExp.prototype,b,2==e?function(t,e){return O.call(t,this,e)}:function(t){return O.call(t,this)})}d&&o(RegExp.prototype[b],"sham",!0)}},fb6a:function(t,e,n){"use strict";var r=n("23e7"),i=n("861d"),a=n("e8b5"),c=n("23cb"),o=n("50c4"),s=n("fc6a"),l=n("8418"),u=n("b622"),d=n("1dde"),f=n("ae40"),h=d("slice"),b=f("slice",{ACCESSORS:!0,0:0,1:2}),p=u("species"),g=[].slice,x=Math.max;r({target:"Array",proto:!0,forced:!h||!b},{slice:function(t,e){var n,r,u,d=s(this),f=o(d.length),h=c(t,f),b=c(void 0===e?f:e,f);if(a(d)&&(n=d.constructor,"function"!=typeof n||n!==Array&&!a(n.prototype)?i(n)&&(n=n[p],null===n&&(n=void 0)):n=void 0,n===Array||void 0===n))return g.call(d,h,b);for(r=new(void 0===n?Array:n)(x(b-h,0)),u=0;h<b;h++,u++)h in d&&l(r,u,d[h]);return r.length=u,r}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,